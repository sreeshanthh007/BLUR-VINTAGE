
<link rel="stylesheet" href="/styles/spinner.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<head>
    <style>
    .form-select-sm {
    padding-right: 2rem;
    background-color: white;
    border: 1px solid #dee2e6;
    border-radius: 4px;
    font-size: 0.875rem;
}

.product-card {
    position: relative;
    padding: 1rem;
    border: 1px solid #eee;
    border-radius: 8px;
    transition: all 0.3s ease;
}

.product-card:hover {
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
}

.product-image-container {
    position: relative;
    margin-bottom: 1rem;
}

.heart-btn {
    position: absolute;
    top: 10px;
    right: 10px;
    background: white;
    border: none;
    border-radius: 50%;
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    z-index: 1;
}

.offer-badge {
    position: absolute;
    top: 10px;
    left: 10px;
    background: #ff4444;
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 0.8rem;
    font-weight: bold;
    z-index: 1;
}

.product-title {
    font-size: 1rem;
    margin-bottom: 0.5rem;
    height: 2.4em;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
}

.price-container {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
}

.product-price {
    margin: 0;
    font-weight: bold;
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.original-price {
    text-decoration: line-through;
    color: #999;
    font-size: 0.9rem;
}

.final-price {
    color: #ff4444;
}

.offer-name {
    font-size: 0.8rem;
    color: #28a745;
    margin: 0;
}

.pagination-container {
    margin-top: 2rem;
}

.page-link {
    color: #333;
    border-color: #ddd;
}

.page-item.active .page-link {
    background-color: #333;
    border-color: #333;
}
.heart-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            background: rgba(255, 255, 255, 0.9);
            border: none;
            border-radius: 50%;
            width: 35px;
            height: 35px;
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: all 0.3s ease;
            z-index: 1;
        }

        .heart-btn:hover {
            transform: scale(1.1);
        }

        .heart-btn i {
            color: #666;
            font-size: 1.2rem;
            transition: all 0.3s ease;
        }

        .heart-btn.active i {
            color: #ff4444;
        }  
.form-select-sm:focus {
    border-color: black;
    box-shadow: none;
}
.position-relative {
    position: relative;
    padding: 0 40px;
}

.pagination-container {
    margin-top: 2rem;
    margin-bottom: 1rem;
}

.pagination {
    gap: 0.25rem;
}

.page-link {
    color: #000;
    background-color: #fff;
    border: 1px solid #dee2e6;
    padding: 0.375rem 0.75rem;
}

.page-link:hover {
    color: #000;
    background-color: #e9ecef;
    border-color: #dee2e6;
}

.page-item.active .page-link {
    background-color: #000;
    border-color: #000;
    color: #fff;
}

.page-item.disabled .page-link {
    color: #6c757d;
    pointer-events: none;
    background-color: #fff;
    border-color: #dee2e6;
}

/* Responsive adjustments */
@media (max-width: 576px) {
    .pagination {
        font-size: 0.875rem;
    }
    
    .page-link {
        padding: 0.25rem 0.5rem;
    }
}
</style>
</head>
<body>

    <div id="preloader-active">
        <div class="preloader">
          <div class="preloader-inner">
            <div class="preloader-img pere-text">
              <strong>Loading</strong>
            </div>
          </div>
        </div>
      </div>
    <!-- sorting
   
    <!-- Header -->
    <%-include ("../../views/partials/user/landingpageHeader")%>
            <!-- Products Grid -->
          
            <div class="col-12">
                <form action="/user/shop" method="get" id="categoryFilterForm" class="d-flex justify-content-start align-items-center">
                    <label for="categorySelect" class="text-nowrap">Category:</label>
                    <select id="categorySelect" name="category" class="form-select form-select-sm" style="width: fit-content; max-width: 200px;">
                        <option value="">All Categories</option>
                        <% if (locals.categories) { %>
                            <% categories.forEach(function(category) { %>
                                <option value="<%= category.name %>" 
                                        <%= locals.currentCategory === category.name ? 'selected' : '' %>>
                                    <%= category.name %>
                                </option>
                            <% }); %>
                        <% } %>
                    </select>
                </form>
            </div>
            
       
            <main class="container-fluid px-2 px-sm-3 px-md-4 py-3 py-md-5">
                <div class="row g-2 g-sm-3 g-md-4">
                    <% for (let i = 0; i < products.length; i++) { %>
                        <% 
                        // Find variants with stock > 0
                        const inStockVariants = products[i].variants?.filter(v => v.stock > 0) || [];
                        if (inStockVariants.length > 0) { 
                        %>
                            <div class="col-6 col-sm-4 col-lg-3">
                                <div class="product-card">
                                    <div class="product-image-container">
                                        <button class="heart-btn" data-product-id="<%= products[i]?._id %>">
                                            <i class="fa-regular fa-heart"></i>
                                        </button>
                                        
                                        <!-- Display discount badge if there's an offer -->
                                        <% if (products[i].discount > 0) { %>
                                            <div class="offer-badge">
                                                <%= products[i].discount %>% OFF
                                            </div>
                                        <% } %>
            
                                        <a href="/user/buy?id=<%= products[i]._id %>">
                                            <% if (inStockVariants[0].productImage && inStockVariants[0].productImage.length > 0) { %>
                                                <img src="<%= inStockVariants[0].productImage[0] %>" 
                                                     alt="<%= products[i].productName %>" 
                                                     class="img-fluid">
                                            <% } else { %>
                                                <img src="/images/default-product.jpg" 
                                                     alt="No image available" 
                                                     class="img-fluid">
                                            <% } %>
                                        </a>
                                    </div>
                                    
                                    <h3 class="product-title"><%= products[i].productName %></h3>
                                    
                                    <div class="price-container">
                                        <% if (products[i].discount > 0) { %>
                                            <!-- Show both original and discounted price -->
                                            <p class="product-price">
                                                <span class="original-price">₹<%= products[i].originalPrice %></span>
                                                <span class="final-price">₹<%= products[i].finalPrice %></span>
                                            </p>
                                            <p class="offer-name"><%= products[i].offerName %></p>
                                        <% } else { %>
                                            <!-- Show only original price -->
                                            <p class="product-price">₹<%= products[i].originalPrice %></p>
                                        <% } %>
                                    </div>
                                </div>
                            </div>
                        <% } %>
                    <% } %>
                </div>
            
                <!-- Pagination -->
                <div class="pagination-container mt-4">
                    <nav aria-label="Product navigation">
                        <ul class="pagination justify-content-center">
                            <li class="page-item <%= !hasPrevPage ? 'disabled' : '' %>">
                                <a class="page-link" href="?page=1<%= currentSort ? `&sort=${currentSort}` : '' %><%= currentCategory ? `&category=${currentCategory}` : '' %>" <%= !hasPrevPage ? 'tabindex="-1"' : '' %>>First</a>
                            </li>
                            <li class="page-item <%= !hasPrevPage ? 'disabled' : '' %>">
                                <a class="page-link" href="?page=<%= currentPage - 1 %><%= currentSort ? `&sort=${currentSort}` : '' %><%= currentCategory ? `&category=${currentCategory}` : '' %>" <%= !hasPrevPage ? 'tabindex="-1"' : '' %>>Previous</a>
                            </li>
            
                            <% for(let i = Math.max(1, currentPage - 2); i <= Math.min(totalPages, currentPage + 2); i++) { %>
                                <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                    <a class="page-link" href="?page=<%= i %><%= currentSort ? `&sort=${currentSort}` : '' %><%= currentCategory ? `&category=${currentCategory}` : '' %>"><%= i %></a>
                                </li>
                            <% } %>
            
                            <li class="page-item <%= !hasNextPage ? 'disabled' : '' %>">
                                <a class="page-link" href="?page=<%= currentPage + 1 %><%= currentSort ? `&sort=${currentSort}` : '' %><%= currentCategory ? `&category=${currentCategory}` : '' %>" <%= !hasNextPage ? 'tabindex="-1"' : '' %>>Next</a>
                            </li>
                            <li class="page-item <%= !hasNextPage ? 'disabled' : '' %>">
                                <a class="page-link" href="?page=<%= totalPages %><%= currentSort ? `&sort=${currentSort}` : '' %><%= currentCategory ? `&category=${currentCategory}` : '' %>" <%= !hasNextPage ? 'tabindex="-1"' : '' %>>Last</a>
                            </li>
                        </ul>
                    </nav>
                </div>
            
                <!-- Page indicator -->
                <div class="text-center mt-3">
                    <small class="text-muted">
                        Page <%= currentPage %> of <%= totalPages %>
                    </small>
                </div>
            </main>
    <%-include ("../../views/partials/user/footer")%>
    <script src="/js/spinner.js"></script>
</body>
</html>

<script>
     async function checkWishlistStatus() {
                try {
               const response = await fetch('/user/wishlist/check-status');
                 const data = await response.json();
            
                   if (data.wishlistProductIds) {
                   heartBtn.forEach(button => {
                    const productId = button.dataset.productId;
                    const heartIcon = button.querySelector('i');
                    
                    if (data.wishlistProductIds.includes(productId)) {
                        heartIcon.classList.remove('fa-regular');
                    heartIcon.classList.add('fa-solid');
                    heartIcon.style.color = "#ff0000";
                    }else{
                        heartIcon.classList.remove('fa-solid');
                    heartIcon.classList.add('fa-regular');
                    heartIcon.style.color = ""; 
                    }
                });
               }
        } catch (error) {
            console.error("Error checking wishlist status:", error);
        }
    }
           
    
               checkWishlistStatus();



            const heartBtn = document.querySelectorAll('.heart-btn');

            heartBtn.forEach((button)=>{
                
                button.addEventListener("click",async function(e){
                    e.preventDefault();

                    const productId = this.dataset.productId;
                 
                    console.log("heart button clicked");
                    
                    const heartIcon = this.querySelector('i');


                    try {
                        const response = await fetch('/user/wishlist/add',{
                            method:"POST",
                            headers:{
                                "Content-Type":"application/json"
                            },

                            body:JSON.stringify({
                                productId,
                            })
                        });
                        
                        const data = await response.json();
                        console.log("response in wishlist",data)
                        if(data.success){
                            heartIcon.classList.remove('fa-regular');
                            heartIcon.classList.add('fa-solid');
                            heartIcon.style.color="#ff0000"

                            showNotification("added to wishlist","success")

                        }else{
                            if(data.message === "Product already in wishlist"){
                                showNotification('Product is already in your wishlist', 'info');
                            }else{
                                showNotification('Failed to add to wishlist', 'error');
                            }
                        }
                    } catch (error) {
                        console.log("error in adding to wishlist in the fetch wishlist add",error.message)
                    }
                })
            })

                  function showNotification(message, type) {
                   // Create notification element
              const notification = document.createElement('div');
               notification.className = `alert alert-${type === 'success' ? 'success' : 
                    type === 'error' ? 'danger' : 
                    'info'} position-fixed`;
                   notification.style.cssText = `
                    top: 20px;
                  right: 20px;
                 z-index: 1000;
                animation: fadeIn 0.5s, fadeOut 0.5s 2.5s;
              `;
    
              notification.textContent = message;
    
   
           document.body.appendChild(notification);
    
    
      setTimeout(() => {
        notification.remove();
       }, 3000);
}


       const style = document.createElement('style');
        style.textContent = `
      @keyframes fadeIn {
        from { opacity: 0; transform: translateY(-20px); }
        to { opacity: 1; transform: translateY(0); }
       }
    
        @keyframes fadeOut {
        from { opacity: 1; transform: translateY(0); }
        to { opacity: 0; transform: translateY(-20px); }
        }
      `
   document.head.appendChild(style);

    


   document.addEventListener('DOMContentLoaded', () => {
    const categorySelect = document.getElementById('categorySelect');

    categorySelect.addEventListener('change', (e) => {
        const selectedCategory = e.target.value;
        const currentSort = new URLSearchParams(window.location.search).get('sort') || 'default';
        
        
        const url = `/user/shop?category=${encodeURIComponent(selectedCategory)}&sort=${currentSort}`;
        
        fetch(url, {
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
        .then(response => response.json())
        .then(data => {
           
            const productsContainer = document.querySelector('.row.g-2');
            productsContainer.innerHTML = '';

            
            data.products.forEach(product => {
                const productCardHtml = `
                    <div class="col-6 col-sm-4 col-lg-3">
                        <div class="product-card">
                            <div class="product-image-container">
                                <button class="heart-btn" data-product-id="${product._id}">
                                    <i class="fa-regular fa-heart"></i>
                                </button>
                                ${product.discount > 0 ? `
                                    <div class="offer-badge">
                                        ${product.discount}% OFF
                                    </div>
                                ` : ''}
                                <a href="/user/buy?id=${product._id}">
                                    <img src="${product.variants[0]?.productImage?.[0] || '/images/default-product.jpg'}" 
                                         alt="${product.productName}" 
                                         class="img-fluid">
                                </a>
                            </div>
                            <h3 class="product-title">${product.productName}</h3>
                            <div class="price-container">
                                ${product.discount > 0 ? `
                                    <p class="product-price">
                                        <span class="original-price">₹${product.originalPrice}</span>
                                        <span class="final-price">₹${product.finalPrice}</span>
                                    </p>
                                    <p class="offer-name">${product.offerName}</p>
                                ` : `
                                    <p class="product-price">₹${product.originalPrice}</p>
                                `}
                            </div>
                        </div>
                    </div>
                `;
                productsContainer.insertAdjacentHTML('beforeend', productCardHtml);
            });

            
            const newUrl = `${window.location.pathname}?category=${selectedCategory}&sort=${currentSort}`;
            window.history.pushState({ path: newUrl }, '', newUrl);

                
            updatePagination(data);
            checkWishlistStatus();
        })
        .catch(error => {
            console.error('Error fetching products:', error);
        });
    });
});
</script>
