    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Wallet - BLUR VINTAGE</title>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
        <style>
            body {
                background-color: #f8f8f8;
                font-family: Arial, sans-serif;
            }
            .header {
                background-color: #fff;
                border-bottom: 1px solid #eee;
                padding: 15px 0;
            }
            .search-input {
                background-color: #f0e6e6;
                border: none;
                padding: 8px 40px 8px 15px;
                width: 100%;
                max-width: 300px;
                border-radius: 4px;
            }
            .balance-card {
            background-color: #fff;
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 0 10px rgba(0,0,0,0.05);
        }
        .transaction-table {
            background-color: #fff;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0,0,0,0.05);
        }
        .btn-add-money {
            background-color: #000;
            color: #fff;
            border: none;
            padding: 10px 20px;
            border-radius: 4px;
        }
        .btn-add-money:hover {
            background-color: #333;
        }
        .transaction-type-deposit { color: green; }
        .transaction-type-withdrawal { color: red; }
        .transaction-type-purchase { color: orange; }
        .transaction-type-refund { color: blue; }

            .sidebar {
                background-color: #fff;
                padding: 30px;
                border-radius: 10px;
                box-shadow: 0 0 10px rgba(0,0,0,0.05);
            }
            .sidebar-link {
                display: flex;
                align-items: center;
                padding: 12px 20px;
                color: #333;
                text-decoration: none;
                border-radius: 8px;
                margin-bottom: 8px;
                transition: background-color 0.3s;
            }
            .sidebar-link:hover, .sidebar-link.active {
                background-color: #f0f0f0;
            }
            .sidebar-link i {
                margin-right: 10px;
                width: 20px;
            }
            .balance-card {
                background-color: #fff;
                border-radius: 10px;
                padding: 20px;
                margin-bottom: 20px;
                box-shadow: 0 0 10px rgba(0,0,0,0.05);
            }
            .transaction-table {
                background-color: #fff;
                border-radius: 10px;
                padding: 20px;
                box-shadow: 0 0 10px rgba(0,0,0,0.05);
            }
            .table th {
                background-color: #f8f8f8;
                font-weight: 500;
            }
            .btn-add-money {
                background-color: #000;
                color: #fff;
                border: none;
                padding: 10px 20px;
                border-radius: 4px;
            }
            .btn-add-money:hover {
                background-color: #333;
            }
            .footer {
                background-color: #e5e5e5;
                padding: 40px 0;
                margin-top: 50px;
            }
            .social-icons {
                display: flex;
                gap: 15px;
                justify-content: center;
                margin: 20px 0;
            }
            .social-icons a {
                color: #333;
                font-size: 1.2rem;
            }
            @media (max-width: 768px) {
                .sidebar {
                    margin-bottom: 20px;
                }
            }
        </style>
    </head>
    <body>
        <!-- Header -->

        <%-include('../partials/user/header.ejs')%>

        <!-- Main Content -->
        <div class="container my-5">
        <div class="row">
            <%-include('../partials/user/userSidebar.ejs')%>

            <div class="col-12 col-md-9">
                <!-- Balance Card -->
                <div class="balance-card mb-4">
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            <h5 class="mb-1">Available Balance</h5>
                            <h3 class="mb-0" id="walletBalance">₹<%- wallet ? wallet.balance.toFixed(2) : '0.00' %></h3>
                        </div>
                        <div class="col-md-6 text-md-end mt-3 mt-md-0">
                            <button class="btn btn-add-money" data-bs-toggle="modal" data-bs-target="#addMoneyModal">
                                <i class="fas fa-plus"></i> Add Money
                            </button>
                        </div>
                    </div>
                </div>

                    <!-- Transaction History -->
                    <div class="transaction-table">
                        <div class="d-flex justify-content-between align-items-center mb-4">
                            <h5 class="mb-0">Transaction History</h5>
                        </div>
                        
                        <div class="table-responsive">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Date</th>
                                        <th>Type</th>
                                        <th>Description</th>
                                        <th>Amount</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% if (wallet && wallet.transactions && wallet.transactions.length > 0) { %>
                                        <% 
                                        const sortedTransactions = wallet.transactions
                                            .sort((a, b) => new Date(b.date) - new Date(a.date))
                                            .slice(0, 10); // Limit to 10 recent transactions
                                        %>
                                        <% sortedTransactions.forEach((transaction) => { %>
                                            <tr>
                                                <td><%= new Date(transaction.date).toLocaleDateString() %></td>
                                                <td class="transaction-type-<%= transaction.type.toLowerCase() %>">
                                                    <%= transaction.type %>
                                                </td>
                                                <td><%= transaction.description || 'No description' %></td>
                                                <td class="<%= 
                                                    transaction.type === 'Withdrawal' || 
                                                    transaction.type === 'Purchase' ? 
                                                    'text-danger' : 'text-success' 
                                                %>">
                                                    ₹<%= transaction.amount.toFixed(2) %>
                                                </td>
                                            </tr>
                                        <% }); %>
                                    <% } else { %>
                                        <tr>
                                            <td colspan="4" class="text-center">No transactions yet</td>
                                        </tr>
                                    <% } %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>


            <!-- Add Money Modal -->
    <div class="modal fade" id="addMoneyModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Money to Wallet</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="addMoneyForm">
                        <div class="mb-3">
                            <label class="form-label">Amount</label>
                            <div class="input-group">
                                <span class="input-group-text">₹</span>
                                <input type="number" class="form-control" name="amount" min="1" max="10000">
                            </div>
                            <small class="form-text text-muted">Maximum limit: ₹10,000</small>
                        </div>
                        <button type="submit" class="btn btn-primary">Add Money</button>
                    </form>
                </div>
            </div>
        </div>
    </div>  

        <!-- Footer -->
        <%-include('../partials/user/footer.ejs')%>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
        <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    </body>
    </html>


    <script>


       
document.getElementById("addMoneyForm").addEventListener("submit", async function(e) {
    e.preventDefault();
    const amountInput = document.querySelector('input[name="amount"]');
    const amount = amountInput.value;
    
    try {
        const response = await fetch('/user/wallet/add', {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({amount})
        });
        
        const result = await response.json();

        // Update wallet balance dynamically
        const balanceElement = document.getElementById("walletBalance");
        if (balanceElement) {
            balanceElement.textContent = result.newBalance;
        }


        // Success toast
        Toastify({
            text: 'Money added successfully',
            duration: 3000,
            gravity: "top",
            position: "right",
            backgroundColor: "green"
        }).showToast();

        // Reset amount input
        amountInput.value = '';

    } catch (error) {
        console.error("Error adding money:", error);
        Toastify({
            text: 'Failed to add money',
            duration: 3000,
            gravity: "top",
            position: "right",
            backgroundColor: "red"
        }).showToast();
    }
});

    </script>