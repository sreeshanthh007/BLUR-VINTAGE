<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
   
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.2/font/bootstrap-icons.css">
    <link rel="stylesheet" href="/styles/categoryManage.css">
</head>
<body>
    <div class="d-flex">
        <!-- Sidebar -->
        <%-include('../partials/admin/sidebar.ejs')%>

        <!-- Main Content -->
        <main class="main-content w-100">
            <!-- <h1 class="mb-4">BLUR VINTAGE â˜…</h1> -->
            
                <table class="table">
                    <thead>
                        <tr class="table-header align-items-center">
                            <th class="col-1">S.No</th>
                            <th class="col">Category Name</th>
                            <th class="col-3 text-end">Unlist /List </th>
                        </tr>
                    </thead>
                    <tbody>

                        <% Category.reverse().forEach((category, index) => { %>
                            <tr class="category-row align-items-center">
                                <td class="col-1"><%= category.name %></td>
                                <td class="col"><%= category.description %></td>
                                <td class="col-3 text-end">
                                    <label class="toggle-switch me-2">
                                        <!-- Checkbox to toggle isListed -->
                                        <input type="checkbox" 
                                               class="isListedToggle" 
                                               data-category-id="<%= category._id %>" 
                                               <%= category.isListed ? 'checked' : '' %>>
                                        <span class="slider"></span>
                                    </label>
                                    <i class="bi bi-pencil-square"></i>
                                </td>
                            </tr>
                        <% }); %>
                        
                    </tbody>
                </table>
                <div class="pagination-container d-flex justify-content-center">
                    <% if (currentPage > 1) { %>
                    <a href="?page=<%= currentPage - 1 %>">&laquo; Previous</a>
                    <% } %> <% for (let i = 1; i <= totalpages; i++) { %> <% if (i ===
                    currentPage) { %>
                    <span class="current-page"><%= i %></span>
                    <% } else { %>
                    <a href="?page=<%= i %>"><%= i %></a>
                    <% } %> <% } %> <% if (currentPage < totalpages) { %>
                    <a href="?page=<%= currentPage + 1 %>">Next &raquo;</a>
                    <% } %>
                  </div>
            <!-- Add New Category Form -->
            <div class="form-section">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <h2 class="m-0">Add New Category</h2>
                    <div class="d-flex align-items-center">
                        <span class="me-2">List / Unlist :</span>
                        <label class="toggle-switch">
                            <input type="checkbox" checked>
                            <span class="slider"></span>
                        </label>
                    </div>
                </div>

                <form id="category-form" enctype="multipart/form-data">
                    <div class="mb-3">
                        <label class="form-label">Name:</label>
                        <input type="text" class="form-control" name="name" id="name">
                        <p id="name-error" class="text-danger error-message"></p>
                    </div>
                    <div class="mb-4">
                        <label class="form-label">Description:</label>
                        <textarea class="form-control" rows="4" name="description" id="description"></textarea>
                        <p id="description-error" class="text-danger error-message"></p>
                    </div>
                    <div class="text-center">
                        <button type="submit" class="save-btn" onclick="categoryValidate(event)">SAVE</button>
                    </div>
                </form>
            </div>
        </main>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
</body>
</html>



<script>
   function categoryValidate(e) {
    e.preventDefault();

    // Validate form fields
    if (!validateForm()) {
        return;
    }

    // Form submission using FormData
    const form = document.getElementById('category-form');
    const formData = new FormData(form);
    fetch("/admin/category", {
        method: "POST",
        body: formData,
    })
        .then((response) => {
            if (!response.ok) {
                return response.json().then((err) => {
                    throw new Error(err.message);
                });
            }
            return response.json();
        })
        .then((data) => {
            console.log(data)
            if (data.success){
                Swal.fire({
                    icon: "success",
                    title: "Success",
                    text: data.message,
                }).then(() => {
                    location.reload();
                });
            } else {
                throw new Error(data.message || "Unknown error occurred");
            }
        })
        .catch((err) => {
            Swal.fire({
                icon: "error",
                title: "Error",
                text: err.message,
            });
        });
}

function validateForm() {
    clearErrorMessages();

    const name = document.getElementById('name').value.trim();
    const description = document.getElementById('description').value.trim();
    let isValid = true;

    if (name === "") {
        displayErrorMessage("name-error", "Please enter a name");
        isValid = false;
    } else if (!/^[a-zA-Z\s]+$/.test(name)) {
        displayErrorMessage("name-error", "Name should only contain alphabetic characters");
        isValid = false;
    }

    if (description === "") {
        displayErrorMessage("description-error", "Please enter a description");
        isValid = false;
    }

    return isValid;
}

function displayErrorMessage(elementId, message) {
    const errorElement = document.getElementById(elementId);
    if (errorElement) {
        errorElement.innerText = message;
        errorElement.style.display = "block";
    }
}

function clearErrorMessages() {
    const errorElements = document.getElementsByClassName("error-message");
    Array.from(errorElements).forEach((elm) => {
        elm.innerText = "";
        elm.style.display = "none";
    });
}

    function validateForm(){
        clearErrorMessages();

        const name = document.getElementById('name').value.trim();
        const description = document.getElementById('description').value.trim();
        isValid = true;

        if(name===""){
            displayErrorMessage("name-error","please enter a name")
            isValid=false
        }else if(!/^[a-zA-Z\s]+$/.test(name)){
            displayErrorMessage("name-error","name should only contain alphabetic charaters");
            isValid=false
        }
        if(description===""){
            displayErrorMessage("description-error","please enter the description");
            isValid=false;
        }
        return isValid;
    }


    function displayErrorMessage(elementId,message){
        let errorElement = document.getElementById(elementId)
        errorElement.innerText = message;
        errorElement.style.display="block";

    }
    function clearErrorMessages(){
        const errorElements = document.getElementsByClassName("error-message")
        Array.from(errorElements).forEach((elm)=>{
            elm.innerText="";
            elm.style.display="none";
        });
    }
</script>