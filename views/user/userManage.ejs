<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Account - BLUR VINTAGE â˜…</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.2/font/bootstrap-icons.css">


  
    <style>
        body {
        background-color: #f5f5f5;
        font-family: Arial, sans-serif;
    }
    
    .header {
        background-color: #e8e8e8;
    }
    
    .header h1 {
        font-size: 1.5rem;
        font-weight: bold;
    }
    
    .search-container {
        width: 200px;
    }
    
    .search-input {
        background-color: #f0e6e6;
        border: none;
        padding: 0.5rem 1rem;
    }
    
    .nav-link {
        color: #333;
        text-decoration: none;
    }
    
    .nav-link:hover {
        color: #000;
    }
    
    .sidebar-nav {
        background-color: #fff;
        padding: 2rem;
        border-radius: 8px;
    }
    
    .profile-avatar {
        width: 120px;
        height: 120px;
        background-color: #f0f0f0;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 3rem;
    }
    
    .sidebar-nav .nav-link {
        padding: 0.75rem 1rem;
        margin-bottom: 0.5rem;
        border-radius: 4px;
        transition: background-color 0.3s ease;
    }
    
    .sidebar-nav .nav-link:hover,
    .sidebar-nav .nav-link.active {
        background-color: #f0f0f0;
    }
    
    .profile-section {
        background-color: #fff;
        padding: 2rem;
        border-radius: 8px;
    }
    
    .form-control {
        background-color: #f0f0f0;
        border: none;
        padding: 0.75rem;
    }
    .is-valid {
    border-color: #198754 !important;
    background-color: #f8fff9 !important;
}

.is-invalid {
    border-color: #dc3545 !important;
    background-color: #fff8f8 !important;
}
    .btn-save {
        background-color: #333;
        color: white;
        padding: 0.5rem 2rem;
    }
    
    .btn-cancel {
        background-color: #e0e0e0;
        color: #333;
        padding: 0.5rem 2rem;
    }
    
    .footer {
        background-color: #e8e8e8;
    }
    
    .social-icons {
        display: flex;
        justify-content: center;
        gap: 1rem;
    }
    
    @media (max-width: 991.98px) {
        .search-container {
            width: 150px;
        }
    
        .sidebar-nav {
            margin-bottom: 2rem;
        }
    }
    
    @media (max-width: 767.98px) {
        .header h1 {
            font-size: 1.2rem;
        }
    
        .search-container {
            width: 120px;
        }
    
        .profile-section {
            padding: 1.5rem;
        }
    }
    
    @media (max-width: 575.98px) {
        .header .col-4 {
            flex: 0 0 auto;
            width: 33.33%;
        }
    
        .search-container {
            display: none;
        }
    
        .profile-section {
            padding: 1rem;
        }
    }
    </style>
</head>
<body>
    <%-include ("../../views/partials/user/header")%>

    <!-- Main Content -->
    <main class="container my-5">
        <%if(locals.user){%>
        <h2 class="mb-4 fs-6 fw-bold " style="padding-left: 50px; margin-right: 80px;">welcome <%=user.firstName%> !</h2>
        <% }else{ %>
        <h2 class="mb-4 fs-6 fw-bold" style="padding-left: 90px;">MY ACCOUNT</h2>
        <%}%>
        <div class="row" >
            <!-- Left Sidebar - My Account Options -->
            <div class="col-lg-3 mb-4 mb-lg-0">
                <div class="sidebar-nav" style="background-color: whitesmoke;">
                    <div class="profile-avatar mb-4">
                        <i class="bi bi-person"></i>
                    </div>
                    <nav class="nav flex-column">
                        <a href="#" class="nav-link active"><i class="bi bi-person me-2"></i>Account Overview</a>
                        <a href="#" class="nav-link"><i class="bi bi-bag me-2"></i>My Orders</a>
                        <a href="/user/address" class="nav-link"><i class="bi bi-geo-alt me-2"></i>Manage Address</a>
                        <a href="#" class="nav-link"><i class="bi bi-wallet2 me-2"></i>Wallet</a>
                        <a href="#" class="nav-link"><i class="bi bi-shield-lock me-2"></i>Manage Password</a>
                        <a href="#" class="nav-link"><i class="bi bi-heart me-2"></i>Wishlist</a>
                    </nav>
                    <button class="btn btn-dark w-100 mt-4" id="logOutBtn">LOG OUT</button>
                </div>
            </div>

            <!-- Right Content - Edit Profile Form -->
            <div class="col-lg-9">
                <div class="profile-section" style="background-color: whitesmoke;">
                    <h3 class="mb-4" style="text-align: center; font-weight: bold;">Edit your Profile</h3>
                    <form action="/user/manage" method="post" id="updateForm">
                        <div class="mb-3 ">
                            <label for="firstName" class="form-label ">First name</label>
                            <input type="text" class="form-control" name="firstName" id="firstName" required" value="<%=user? user.firstName : ""%>">
                            <div class="text-danger error-message"></div>
                        </div>
                        <div class="mb-3">
                            <label for="lastName" class="form-label">Last Name</label>
                            <input type="text" class="form-control" name="lastName" id="lastName" required value="<%=user ? user.lastName : 'empty'%>">
                            <div class="text-danger error-message"></div>
                        </div>
                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <input type="email" class="form-control"  id="email" name="email" required value="<%= user ? user.email : "" %>" readonly>
                            <div class="text-danger error-message"></div>
                        </div>
                        <div class="mb-3">
                            <label for="phone" class="form-label">Phone Number</label>
                            <input type="tel" class="form-control" name="phoneNo" id="phone" required value="<%=user ? user.phoneNo : ""%>">
                            <div class="text-danger error-message"></div>
                        </div>
                        <div class="d-flex justify-content-end gap-3">
                            <button type="button" class="btn btn-cancel">Cancel</button>
                            <button type="submit" id="saveChangesBtn" class="btn btn-save" style="background-color: #000; color: white;">Save Changes</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </main>

    <!-- Footer -->
    <%-include ("../../views/partials/user/footer")%>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    const logOutBtn = document.getElementById("logOutBtn");
    logOutBtn.addEventListener("click",async function(e){
        e.preventDefault();

        try{
            const response =  await fetch("/user/logout",{
            method:"post",
        });

        const data = await response.json();
       

        if(data.success){
            Swal.fire({
                icon:"success",
                title:"log out successfully",
                timer:1000
            }).then(()=>{
                window.location.href = "/user/login";
            })
        }else{
            Swal.fire({
                icon:"error",
                title:"server error"
            });
        }
        }catch(err){
            console.log('error while login out',err);
            Swal.fire({
                icon:"error",
                title:"server error"
            });
        }
    });


    const form = document.getElementById('updateForm');
const firstName = document.getElementById('firstName');
const lastName = document.getElementById('lastName');
const email = document.getElementById('email');
const phone = document.getElementById('phone');

// Validation patterns
const patterns = {
    firstName: /^[A-Za-z]{2,30}$/,
    lastName: /^[A-Za-z]{2,30}$/,
    email: /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,6}$/,
    phone: /^[0-9]{10}$/
};

// Error messages
const errorMessages = {
    firstName: 'First name should be 2-30 characters long and contain only letters',
    lastName: 'Last name should be 2-30 characters long and contain only letters',
    email: 'Please enter a valid email address',
    phone: 'Please enter a valid 10-digit phone number'
};

// Function to show error
function showError(input, message) {
    const errorDiv = input.nextElementSibling;
    errorDiv.textContent = message;
    input.classList.remove('is-valid');
    input.classList.add('is-invalid');
}

// Function to show success
function showSuccess(input) {
    const errorDiv = input.nextElementSibling;
    errorDiv.textContent = '';
    input.classList.remove('is-invalid');
    input.classList.add('is-valid');
}

// Function to validate a field
function validateField(input, pattern) {
    if (!pattern.test(input.value)) {
        showError(input, errorMessages[input.id]);
        return false;
    } else {
        showSuccess(input);
        return true;
    }
}

// Add live validation to input fields
[firstName, lastName, phone].forEach(input => {
    input.addEventListener('input', () => {
        validateField(input, patterns[input.id]);
    });

    // Also validate on blur
    input.addEventListener('blur', () => {
        if (input.value.trim() === '') {
            showError(input, 'This field is required');
        } else {
            validateField(input, patterns[input.id]);
        }
    });
});




updateForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    // Validate all fields
    let isValid = true;
    [firstName, lastName, phone].forEach(input => {
        if (input.value.trim() === '') {
            showError(input, 'This field is required');
            isValid = false;
        } else if (!validateField(input, patterns[input.id])) {
            isValid = false;
        }
    });

    if (!isValid) {
        Swal.fire({
            icon: 'error',
            title: 'Validation Error',
            text: 'Please check all fields and try again'
        });
        return;
    }

    // If validation passes, proceed with your existing form submission logic
    const formData = new FormData(updateForm);
    const formObject = Object.fromEntries(formData.entries());

    try {
        const response = await fetch("/user/manage", {
            method: "post",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(formObject),
        });

        const result = await response.json();

        if (response.ok) {
            Swal.fire({
                icon: "success",
                title: "Updated!",
                text: "Your details have been successfully updated",
            }).then(() => {
                window.location.reload();
            });
        } else {
            Swal.fire({
                icon: "error",
                title: "Error",
                text: result.message
            });
        }
    } catch (error) {
        console.log("Error in sending data to backend in userdetails", error);
        Swal.fire({
            icon: "error",
            title: "Error",
            text: "An unexpected error occurred. Please try again later."
        });
    }
});



</script>
