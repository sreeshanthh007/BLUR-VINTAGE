    <!-- views/user/orderDetails.ejs -->
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Order Details</title>
        <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;700&display=swap" rel="stylesheet">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
        <style>
            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
            }

            body {
                font-family: 'Roboto', sans-serif;
                background-color: #f5f5f5;
                color: #333;
            }

            .container {
                max-width: 1200px;
                margin: 20px auto;
                padding: 0 20px;
            }

            .order-card {
                background: white;
                border-radius: 8px;
                box-shadow: 0 2px 4px rgba(0,0,0,0.1);
                margin-bottom: 20px;
                padding: 20px;
            }

            .order-header {
                display: flex;
                justify-content: space-between;
                align-items: center;
                border-bottom: 1px solid #eee;
                padding-bottom: 15px;
                margin-bottom: 20px;
            }

            .order-number {
                font-size: 1.2rem;
                font-weight: bold;
            }

            .order-status {
                padding: 5px 10px;
                border-radius: 4px;
                font-weight: 500;
            }

            .status-Processing { background: #fff3cd; color: #856404; }
            .status-Shipped { background: #cce5ff; color: #004085; }
            .status-Delivered { background: #d4edda; color: #155724; }
            .status-Cancelled { background: #f8d7da; color: #721c24; }

            .order-info-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                gap: 20px;
                margin-bottom: 20px;
            }

            .info-section {
                background: #f8f9fa;
                padding: 15px;
                border-radius: 4px;
            }

            .info-section h3 {
                margin-bottom: 10px;
                color: #333;
            }

            .product-list {
                margin-top: 20px;
            }

            .product-item {
                display: grid;
                grid-template-columns: auto 1fr auto;
                gap: 20px;
                padding: 15px;
                border: 1px solid #eee;
                border-radius: 4px;
                margin-bottom: 10px;
            }

            .product-image {
                width: 100px;
                height: 100px;
                object-fit: cover;
                border-radius: 4px;
            }

            .product-details {
                display: flex;
                flex-direction: column;
                justify-content: center;
            }

            .price-details {
                text-align: right;
                display: flex;
                flex-direction: column;
                justify-content: center;
            }

            .original-price {
                text-decoration: line-through;
                color: #666;
            }

            .discounted-price {
                font-weight: bold;
                font-size: 1.1rem;
            }

            .product-offer {
                color: #28a745;
                font-size: 0.9rem;
            }

            .order-summary {
                background: #f8f9fa;
                padding: 15px;
                border-radius: 4px;
                margin-top: 20px;
            }

            .total-amount {
                font-size: 1.2rem;
                font-weight: bold;
                text-align: right;
                margin-top: 10px;
                padding-top: 10px;
                border-top: 1px solid #ddd;
            }

            @media (max-width: 768px) {
                .product-item {
                    grid-template-columns: 1fr;
                    text-align: center;
                }

                .product-image {
                    margin: 0 auto;
                }

                .price-details {
                    text-align: center;
                }
            }
        </style>
    </head>
    <body>
      <!-- Inside your orderDetails.ejs -->
<div class="container">

      <% if (!orders || orders.length === 0) { %>
        <div class="order-card" style="text-align: center; padding: 40px; margin-top: 100px;">
            <i class="fas fa-shopping-bag" style="font-size: 48px; color: #ccc; margin-bottom: 20px;"></i>
            <h2>No Orders Found</h2>
            <p>You haven't placed any orders yet.</p>
            <a href="/products" style="display: inline-block; margin-top: 20px; padding: 10px 20px; background-color: #007bff; color: white; text-decoration: none; border-radius: 4px;">
                Start Shopping
            </a>
        </div>
    <% } else{ %>
    <% orders.forEach(order => { %>
        <div class="order-card">
                <div class="order-header">
                    <div class="order-number">
                        Order #<%= order.orderNumber %>
                    </div>
                    <div class="order-status status-<%= order.orderStatus %>">
                        <%= order.orderStatus %>
                    </div>
                </div>
         <div class="order-header">
          <% if (order.orderStatus !== 'Cancelled' && order.orderStatus !== 'Delivered') { %>
           <button 
            class="cancel-order-btn" 
            data-orderid="<%= order._id %>"
            onclick="confirmCancelOrder('<%= order._id %>')"
            style="background-color: #dc3545; color: white; padding: 8px 16px; border: none; border-radius: 4px; cursor: pointer;"
          >
            Cancel Order
        </button>
         <% } %>
          </div>
            <div class="order-info-grid">
                <!-- Rest of your existing order card content -->
                <div class="info-section">
                    <h3>Order Information</h3>
                    <p><strong>Order Date:</strong> <%= new Date(order.createdAt).toLocaleDateString() %></p>
                    <% if (order.expectedDeliveryDate) { %>
                        <p><strong>Expected Delivery:</strong> <%= new Date(order.expectedDeliveryDate).toLocaleDateString() %></p>
                    <% } %>
                    <p><strong>Payment Method:</strong> <%= order.payment.method %></p>
                    <p><strong>Payment Status:</strong> <%= order.payment.status %></p>
                </div>

                <!-- Shipping address section -->
                <div class="info-section">
                    <h3>Shipping Address</h3>
                    <p><%= order.shippingAddress.name %></p>
                    <p><%= order.shippingAddress.landMark %></p>
                    <p><%= order.shippingAddress.city %>, <%= order.shippingAddress.state %></p>
                    <p><%= order.shippingAddress.country %> - <%= order.shippingAddress.pincode %></p>
                    <p>Phone: <%= order.shippingAddress.phone %></p>
                </div>
            </div>

            <!-- Product list section -->
            <div class="product-list">
                <h3>Ordered Items</h3>
                <% order.orderItems.forEach(item => { %>
                    <div class="product-item">
                        <img src="<%= item.variant.productImage %>" alt="Product" class="product-image">
                        <div class="product-details">
                            <h4><%= item.product.productName %></h4>
                            <p>Color: <%= item.variant.colorName %></p>
                            <p>Size: <%= item.variant.size %></p>
                            <p>Quantity: <%= item.quantity %></p>
                            <% if (item.status.return && item.status.return.requested) { %>
                                <p class="return-status">Return <%= item.status.return.status %></p>
                            <% } %>
                        </div>
                        <div class="price-details">
                            <% if (item.price.originalPrice !== item.price.discountedPrice) { %>
                                <span class="original-price">₹<%= item.price.originalPrice.toFixed(2) %></span>
                            <% } %>
                            <span class="discounted-price">₹<%= item.price.discountedPrice.toFixed(2) %></span>
                            <% if (item.price.productOffer > 0) { %>
                                <span class="product-offer">(<%= item.price.productOffer %>% off)</span>
                            <% } %>
                        </div>
                    </div>
                <% }); %>
            </div>

            <!-- Order summary section -->
            <div class="order-summary">
                <h3>Order Summary</h3>
                <p><strong>Subtotal:</strong> ₹<%= order.pricing.subtotal.toFixed(2) %></p>
                <% if (order.pricing.coupon && order.pricing.coupon.discount > 0) { %>
                    <p><strong>Coupon Discount:</strong> ₹<%= order.pricing.coupon.discount.toFixed(2) %>
                        (<%= order.pricing.coupon.code %>)</p>
                <% } %>
                <% if (order.pricing.productOffersTotal > 0) { %>
                    <p><strong>Product Offers:</strong> ₹<%= order.pricing.productOffersTotal.toFixed(2) %></p>
                <% } %>
                <div class="total-amount">
                    <strong>Total Amount:</strong> ₹<%= order.pricing.finalAmount.toFixed(2) %>
                </div>
            </div>
        </div>
    <% }); %>
    <%}%>
</div>
 </body>
 </html>
 <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

 <script>
    function confirmCancelOrder(productId){
        Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, cancel it!',
        input: 'text',
        inputLabel: 'Reason for cancellation',
        inputPlaceholder: 'Enter your reason (optional)',
        inputAttributes: {
            autocapitalize: 'off'
        }
    }).then((result) => {
        if (result.isConfirmed) {
            cancelOrder(productId, result.value);
        }
    });
}


async function cancelOrder(orderId, reason) {
    try {
        const response = await fetch(`/user/cancel-order/${orderId}`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ reason })
        });

        const data = await response.json();

        if (data.success) {
            Swal.fire(
                'Cancelled!',
                'Your order has been cancelled.',
                'success'
            ).then(() => {
                // Reload the page to show updated status
                window.location.reload();
            });
        } else {
            Swal.fire(
                'Error!',
                data.message || 'Failed to cancel order',
                'error'
            );
        }
    } catch (error) {
        Swal.fire(
            'Error!',
            'Something went wrong',
            'error'
        );
    }
}
 </script>