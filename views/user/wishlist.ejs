<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Favourites - BLUR VINTAGE</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <style>
        body {
            font-family: Arial, sans-serif;
        }
        .search-input {
            background-color: #f0e6e6;
            border: none;
            padding: 8px 40px 8px 15px;
            width: 100%;
            max-width: 300px;
        }
        .header-icon {
            font-size: 1.2rem;
            color: #333;
            cursor: pointer;
        }
        .product-card {
            border: none;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
            transition: transform 0.2s;
        }
        .product-card:hover {
            transform: translateY(-5px);
        }
        .delete-icon {
            position: absolute;
            top: 10px;
            right: 10px;
            cursor: pointer;
            color: #333;
        }
        .add-to-cart {
            background-color: #333;
            color: white;
            border: none;
            padding: 10px;
            width: 100%;
            transition: background-color 0.2s;
        }
        .add-to-cart:hover {
            background-color: #555;
        }
        .footer {
            background-color: #e5e5e5;
            padding: 40px 0;
            margin-top: 50px;
        }
        .footer-title {
            font-weight: bold;
            margin-bottom: 20px;
        }
        .footer-link {
            color: #333;
            text-decoration: none;
            display: block;
            margin-bottom: 10px;
        }


        
        .social-icons {
            display: flex;
            gap: 15px;
            justify-content: center;
            margin: 20px 0;
        }
        .social-icons a {
            color: #333;
            font-size: 1.2rem;
        }
    </style>
</head>
<body>
    <!-- Header -->
    <%-include('../partials/user/header.ejs')%>

    <!-- Main Content -->
    <main class="container my-5">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h2 class="h3">FAVOURITES</h2>
            <span><%= wishlistItems.length %> item(s)</span>
        </div>
        <div class="row g-4 mt-2">
           
            <% wishlistItems.forEach(item => { %>
                <div class="col-12 col-md-6 col-lg-4" data-product-id="<'%=item.product._id%'>">
                    <div class="card product-card">
                        <a href="/user/buy?id=<%=item.product._id%>">
                        <img src="<%= item.variant.productImage[0] %>" class="card-img-top" alt="<%= item.product.productName %>">
                       </a>
                       <div class="card-body">
                        <i class="fas fa-trash delete-icon" id="delete-icon" onclick="removeProduct('<%=item.product._id%>')"></i>
                        <h5 class="card-title" style="color: black; font-weight: bold;"><%= item.product.productName %></h5>
                        
                        
                        <% if (item.variant.discount > 0) { %>
                            <div class="price-section">
                                <p class="card-text mb-0">
                                    <span class="original-price text-muted text-decoration-line-through">
                                        Rs/- <%= item.variant.originalPrice %>
                                    </span>
                                    <span class="discounted-price ms-2" style="color: red; font-weight: bold;">
                                        Rs/- <%= item.variant.price %>
                                    </span>
                                </p>
                                <div class="offer-badge">
                                    <span class="badge bg-danger">
                                        <%= item.variant.discount %>% OFF
                                        <% if (item.variant.offerName) { %>
                                            - <%= item.variant.offerName %>
                                        <% } %>
                                    </span>
                                </div>
                            </div>
                        <% } else { %>
                            <p class="card-text" style="color: red; font-weight: bold;">
                                Rs/- <%= item.variant.price %>
                            </p>
                        <% } %>
                        
                        <p class="card-text text-muted">Color: <%= item.variant.colorName %></p>

                        <button 
                        class="btn btn-primary w-100 mt-2"
                        onclick="addToCart('<%=item.product._id%>', '<%=item.variant._id%>')"
                       >
                        Add to Cart
                    </button>
                    </div>
                    
                    </div>
                </div>
            <% }); %>
        </div>
        <div class="modal fade" id="variantModal" tabindex="-1" aria-labelledby="variantModalLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="variantModalLabel">Select Product Variant</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="variant-options">
                            <div class="mb-3">
                                <label class="form-label">Color:</label>
                                <div class="color-options" id="colorOptions"></div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Size:</label>
                                <div class="size-options" id="sizeOptions"></div>
                            </div>
                            <div class="selected-variant-details mt-3">
                                <p class="price mb-2">Price: <span id="selectedPrice">--</span></p>
                                <p class="stock mb-2">Stock: <span id="selectedStock">--</span></p>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" id="addToCartBtn" disabled>Add to Cart</button>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <!-- Footer -->
    <%-include('../../views/partials/user/footer.ejs')%>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

</body>
</html>

<script>
   async function removeProduct(productId){
        Swal.fire({
            icon:"info",
            title:"are you sure ?",
            text:"you want to remove this product from your wishlist ?",
            showCancelButton:true,
            cancelButtonColor:"#d33",
            cancelButtonText:"no keep it",
            confirmButtonColor:"#3085d6",
            confirmButtonText:"Remove from wishlist"
        }).then(async(result)=>{
            if(result.isConfirmed){
                try {
                    const response = await fetch(`/user/wishlist/remove-product/${productId}`,{
                        method:"delete",
                        headers:{
                            "Content-Type":"application/json"
                        },
                    });
                    const data = await response.json();
                    console.log("response",data)
                    if(data.success){
                        Swal.fire({
                            icon:"success",
                            title:data.message,
                            timer:1500
                        }).then(()=>{
                         location.reload()
                        })
                    }else{
                        Swal.fire({
                            icon:"error",
                            title:"can't remove the product"
                        }); 
                    }
                } catch (error) {
                    console.log("error in remove wishlist fetch",error.message)
                }
            }
        })
    }


    async function addToCart(productId, variantId) {
    try {
        // Show variant selection modal
        const modal = new bootstrap.Modal(document.getElementById('variantModal'));
        
        // Fetch product variants
        const response = await fetch(`/user/wishlist-products/${productId}`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json'
            }
        });

        if (!response.ok) {
            throw new Error('Failed to fetch product details');
        }

        const productData = await response.json();
        
        if (!productData.success) {
            throw new Error(productData.message);
        }

        // Populate modal with variants
        populateVariantModal(productData.data, productId);
        modal.show();

    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message || 'Failed to load product details'
        });
    }
}

function populateVariantModal(product, productId) {
    const colorOptions = document.getElementById('colorOptions');
   const sizeOptions = document.getElementById('sizeOptions');
   const variantDetails = document.querySelector('.selected-variant-details');
   
   colorOptions.innerHTML = `
       <div class="d-flex flex-wrap gap-3 mb-3">
           ${product.variants.map(variant => `
               <div class="variant-option">
                   <input class="btn-check" type="radio" name="color" 
                       id="color_${variant.color}" value="${variant.color}" 
                       data-colorname="${variant.colorName}" 
                       data-size="${variant.size}">
                   <label class="btn btn-outline-secondary px-4 py-2" for="color_${variant.color}">
                       ${variant.colorName}
                   </label>
               </div>
           `).join('')}
       </div>
   `;

   sizeOptions.style.display = 'none';
   variantDetails.style.display = 'none';

   document.querySelectorAll('input[name="color"]').forEach(input => {
       input.addEventListener('change', () => {
           const variant = product.variants.find(v => v.color === input.value);
           if (variant) {
               sizeOptions.style.display = 'block';
               sizeOptions.innerHTML = `<p class="mb-2">Size: ${variant.size}</p>`;

               variantDetails.style.display = 'block';
               let priceDisplay = variant.price;
               
               // Check for product/category offers
               if (product.productOffer || (product.category && product.category.categoryOffer)) {
                   const now = new Date();
                   let bestDiscount = 0;
                   
                   if (product.productOffer && 
                       now >= new Date(product.productOffer.startDate) && 
                       now <= new Date(product.productOffer.expiryDate)) {
                       bestDiscount = Math.max(bestDiscount, product.productOffer.discount);
                   }

                   if (product.category?.categoryOffer &&
                       now >= new Date(product.category.categoryOffer.startDate) &&
                       now <= new Date(product.category.categoryOffer.expiryDate)) {
                       bestDiscount = Math.max(bestDiscount, product.category.categoryOffer.discount);
                   }

                   if (bestDiscount > 0) {
                       const discountedPrice = variant.price - (variant.price * (bestDiscount / 100));
                       priceDisplay = `
                           <span class="text-decoration-line-through text-muted">₹${variant.price}</span>
                           <span class="text-danger ms-2">₹${Math.round(discountedPrice)}</span>
                           <span class="badge bg-danger ms-2">${bestDiscount}% OFF</span>
                       `;
                   }
               }

               variantDetails.innerHTML = `
                   <div class="card mt-4 p-3">
                       <div class="row">
                           <div class="col-6">
                               <p class="mb-1 text-muted">Price:</p>
                               <h4 class="mb-0">${priceDisplay}</h4>
                           </div>
                           <div class="col-6">
                               <p class="mb-1 text-muted">Available Stock:</p>
                               <h4 class="mb-0">${variant.stock}</h4>
                           </div>
                       </div>
                   </div>
               `;

               document.getElementById('addToCartBtn').disabled = variant.stock <= 0;
           }
       });
   });
    const addToCartBtn = document.getElementById('addToCartBtn');
    addToCartBtn.onclick = () => handleAddToCart(product, productId);
    
   
    
}


async function handleAddToCart(product, productId) {
    const selectedColor = document.querySelector('input[name="color"]:checked');
    const selectedSize = document.querySelector('input[name="size"]:checked');

    if (!selectedColor) {
        Swal.fire({
            icon: 'error',
            title: 'Please select both color and size'
        });
        return;
    }

    const variant = product.variants.find(v => v.color === selectedColor.value);

        try {
            const response = await fetch('/user/wishlist-to-cart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    productId: productId,
                    color: selectedColor.value,
                    colorName: selectedColor.dataset.colorname,
                    size: variant.size,
                    quantity: 1
                })
            });

            const result = await response.json();

            if (result.success) {
                bootstrap.Modal.getInstance(document.getElementById('variantModal')).hide();
                Swal.fire({
                    icon: 'success',
                    title: 'Added to cart successfully!',
                    timer: 1500
                }).then(() => {
                    // Optionally refresh the cart counter if you have one
                    updateCartCount();
                });
            } else {
                throw new Error(result.message);
            }
        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: error.message || 'Failed to add to cart'
            });
        }
    };

function updateSelectedVariant(product) {
    const selectedColor = document.querySelector('input[name="color"]:checked')?.value;
    const selectedSize = document.querySelector('input[name="size"]:checked')?.value;
    
    if (selectedColor && selectedSize) {
        const variant = product.variants.find(v => 
            v.color === selectedColor && 
            v.size === selectedSize
        );
        
        if (variant) {
            document.getElementById('selectedPrice').textContent = `₹${variant.price}`;
            document.getElementById('selectedStock').textContent = variant.stock;
            document.getElementById('addToCartBtn').disabled = variant.stock <= 0;
        }
    }
}


</script>