<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Add Address - BLUR VINTAGE â˜…</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.2/font/bootstrap-icons.css"
    />
    <link rel="stylesheet" href="/styles/usersidebar.css" />
    <style>
      :root {
        --blur-gray: #f5f5f5;
        --blur-dark: #212121;
        --blur-light-gray: #e0e0e0;
      }
      
      body {
        background-color: var(--blur-gray);
        font-family: system-ui, -apple-system, sans-serif;
      }

      .header {
        background-color: var(--blur-gray);
        padding: 1rem 0;
        border-bottom: 1px solid var(--blur-light-gray);
      }
      */ .form-control {
        background-color: var(--blur-light-gray);
        border: none;
        padding: 0.75rem;
        height: auto;
      }

      .error-message {
        margin-top: 0.25rem;
        font-size: 0.875rem;
      }
      .form-control.is-invalid {
        border-color: #dc3545;
        background-image: none;
      }
      .form-control.is-valid {
        border-color: #198754;
        background-image: none;
      }
      @media (max-width: 768px) {
        .header {
          padding: 0.5rem 0;
        }

        .search-container {
          max-width: 100%;
          margin: 1rem 0;
        }

        .sidebar {
          margin-bottom: 2rem;
        }

        .profile-icon {
          width: 80px;
          height: 80px;
        }

        .form-section {
          padding: 1rem !important;
        }
      }
    </style>
  </head>
  <body>
    <!-- Header -->
    <%-include ('../../views/partials/user/header.ejs')%>

    <!-- Main Content -->
    <div class="container py-4">
      <div class="row">
        <!-- Sidebar -->
        <%-include ('../../views/partials/user/userSidebar')%>

        <!-- Edit Address Form -->
        <div class="col-md-9">
          <div class="bg-white rounded-3 form-section p-5">
            <h2 class="h4 mb-4">Add Address</h2>
            <form id="addressForm">
              <div class="row g-4">
                <div class="col-md-6">
                  <label class="form-label">FULL NAME</label>
                  <input type="text" class="form-control" id="fullName" name="name" />
                  <div class="text-danger error-message"></div>
                </div>
                <div class="col-md-6">
                  <label class="form-label">PHONE NO.</label>
                  <input type="tel" class="form-control"  id="phone" name="phone"/>
                  <div class="text-danger error-message"></div>
                </div>
                <div class="col-md-6">
                  <label class="form-label">LANDMARK</label>
                  <input type="text" class="form-control" id="landmark"  name="landMark"/>
                  <div class="text-danger error-message"></div>
                </div>
                <div class="col-md-6">
                  <label class="form-label">CITY</label>
                  <input type="text" class="form-control" id="city" name="city"/>
                  <div class="text-danger error-message"></div>
                </div>
                <div class="col-md-6">
                  <label class="form-label">COUNTRY</label>
                  <input type="text" class="form-control" id="country" name="country"/>
                  <div class="text-danger error-message"></div>
                </div>
                <div class="col-md-6">
                  <label class="form-label">STATE</label>
                  <input type="text" class="form-control" id="state" name="state"/>
                  <div class="text-danger error-message"></div>
                </div>
                <div class="col-md-12">
                  <label class="form-label">PINCODE</label>
                  <input type="text" class="form-control" id="pincode" name="pincode" />
                  <div class="text-danger error-message"></div>
                </div>
                <div class="col-12 text-end mt-4">
                  <button type="button" class="btn btn-cancel me-2">
                    CANCEL
                  </button>
                  <button type="submit" class="btn btn-dark" id="submitBtn">
                    ADD ADDRESS
                  </button>
                </div>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>

    <!-- Footer -->
    <%- include ('../../views/partials/user/footer')%>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
   document.addEventListener("DOMContentLoaded", () => {
  // Get form elements
      const form = document.getElementById("addressForm");
     const fullName = document.getElementById("fullName");
    const phone = document.getElementById("phone");
    const landmark = document.getElementById("landmark");
    const city = document.getElementById("city");
   const state = document.getElementById("state");
   const pincode = document.getElementById("pincode");
   const country = document.getElementById("country");

  // Validation patterns
  const patterns = {
    fullName: /^[A-Za-z\s]{3,50}$/,
    phone: /^[0-9]{10}$/,
    landmark: /^[A-Za-z0-9\s,.'-]{3,100}$/,
    city: /^[A-Za-z\s]{2,50}$/,
    state: /^[A-Za-z\s]{2,50}$/,
    country: /^[A-Za-z\s]{2,50}$/,
    pincode: /^[0-9]{6}$/,
  };

  // Error messages
  const errorMessages = {
    fullName: "Full name should be 3-50 characters long and contain only letters",
    phone: "Please enter a valid 10-digit phone number",
    landmark: "Landmark should be 3-100 characters long",
    city: "City should contain only letters",
    state: "State should contain only letters",
    country: "State should contain only letters",
    pincode: "Please enter a valid 6-digit pincode",
  };

  // Function to show error
  function showError(input, message) {
    const errorDiv = input.nextElementSibling;
    if (!errorDiv || !errorDiv.classList.contains("error-message")) {
      const newErrorDiv = document.createElement("div");
      newErrorDiv.className = "error-message text-danger small";
      input.parentNode.insertBefore(newErrorDiv, input.nextSibling);
      newErrorDiv.textContent = message;
    } else {
      errorDiv.textContent = message;
    }
    input.classList.remove("is-valid");
    input.classList.add("is-invalid");
  }

  // Function to show success
  function showSuccess(input) {
    const errorDiv = input.nextElementSibling;
    if (errorDiv && errorDiv.classList.contains("error-message")) {
      errorDiv.textContent = "";
    }
    input.classList.remove("is-invalid");
    input.classList.add("is-valid");
  }

  // Function to validate a field
  function validateField(input, pattern) {
    if (!input) return true;
    if (input.value.trim() === "") {
      showError(input, "This field is required");
      return false;
    }
    if (!pattern.test(input.value)) {
      showError(input, errorMessages[input.id]);
      return false;
    }
    showSuccess(input);
    return true;
  }

  // Add live validation to all input fields
  const inputs = [fullName, phone, landmark, city, state, pincode].filter(
    (input) => input !== null
  );

  inputs.forEach((input) => {
    input.addEventListener("input", () => {
      validateField(input, patterns[input.id]);
    });

    input.addEventListener("blur", () => {
      if (input.value.trim() === "") {
        showError(input, "This field is required");
      } else {
        validateField(input, patterns[input.id]);
      }
    });
  });

  // Form submission handler
  form.addEventListener("submit", async (e) => {
    e.preventDefault();

    // Validate all fields before submission
    const isValid = inputs.every((input) => validateField(input, patterns[input.id]));

    if (!isValid) {
      return;
    }

    const formData = {
      name: fullName.value.trim(),
      phone: phone.value.trim(),
      landMark: landmark.value.trim(),
      city: city.value.trim(),
      state: state.value.trim(),
      country: country.value.trim(),
      pincode: pincode.value.trim(),
    };

    try {
      const response = await fetch("/user/addAddress", {
        method: "post",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(formData),
      });

      const responseData = await response.json();

      if (responseData.success) {
        Swal.fire({
          icon: "success",
          text: responseData.message,
          title: "Success",
          timer: 1500,
        }).then(() => {
          window.location.href = responseData.redirectUrl;
        });
      } else {
        Swal.fire({
          icon: "error",
          title: "Error",
          text: responseData.message,
        });
      }
    } catch (error) {
      console.error("Error in addaddress fetch:", error.message);
      Swal.fire({
        icon: "error",
        title: "Error",
        text: "An unexpected error occurred. Please try again.",
      });
    }
  });
});
  
    </script>
  </body>
</html>
