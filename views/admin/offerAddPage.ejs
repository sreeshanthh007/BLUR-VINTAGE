<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Offers Management - BLUR VINTAGE</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">
    <style>
        :root {
            --mint-bg: #f0f7f7;
            --sidebar-bg: #f5f5f5;
            --text-dark: #333;
        }

        body {
            background-color: #fff;
            color: var(--text-dark);
            font-family: system-ui, -apple-system, sans-serif;
        }

        .sidebar {
            background: var(--sidebar-bg);
            min-height: 100vh;
            padding: 2rem 0;
            position: fixed;
            width: 250px;
        }

        .sidebar .nav-link {
            color: var(--text-dark);
            padding: 0.5rem 2rem;
            opacity: 0.8;
            text-decoration: none;
        }

        .sidebar .nav-link:hover {
            opacity: 1;
            background: rgba(0,0,0,0.05);
        }

        .sidebar .nav-link.active {
            opacity: 1;
            font-weight: 500;
            background: #000;
            color: #fff;
        }

        .main-content {
            margin-left: 250px;
            padding: 2rem;
        }

        .error-message {
    display: none;
}

.is-invalid + .error-message {
    display: block;
}

.is-invalid {
    border-color: #dc3545;
}

.is-valid {
    border-color: #198754;
}

        .brand {
            font-size: 1.75rem;
            text-align: center;
            padding: 1rem;
            margin-bottom: 2rem;
        }

        .form-control, .btn {
            border-radius: 4px;
        }

        .form-control {
            background-color: #fff;
            border: 1px solid #e0e0e0;
        }

        .offer-form {
            background-color: var(--mint-bg);
            padding: 2rem;
            border-radius: 8px;
            margin-bottom: 2rem;
        }

        .table {
            background: var(--mint-bg);
            border-radius: 8px;
            overflow: hidden;
        }

        .table th {
            font-weight: 500;
            background: rgba(0,0,0,0.02);
        }

        .user-avatar {
            width: 80px;
            height: 80px;
            background: #e0e0e0;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: 0 auto 1rem;
        }

        .user-avatar i {
            font-size: 2rem;
            color: #666;
        }

        .form-label {
            font-weight: 500;
            margin-bottom: 0.5rem;
        }

        .btn-add {
            background: #000;
            color: #fff;
            padding: 0.5rem 2rem;
            border-radius: 25px;
        }

        .btn-add:hover {
            background: #333;
            color: #fff;
        }

        .filters select {
            background-color: var(--mint-bg);
            border: 1px solid #e0e0e0;
            padding: 0.25rem 1rem;
        }

        @media (max-width: 991px) {
            .sidebar {
                width: 200px;
            }
            .main-content {
                margin-left: 200px;
            }
        }

        @media (max-width: 767px) {
            .sidebar {
                width: 100%;
                height: auto;
                min-height: auto;
                position: relative;
            }
            .main-content {
                margin-left: 0;
                padding: 1rem;
            }
            .offer-form {
                padding: 1rem;
            }
            .table-responsive {
                font-size: 0.875rem;
            }
        }
    </style>
</head>
<body>
    <div class="sidebar">
       <%-include('../../views/partials/admin/sidebar.ejs')%>
    </div>

    <main class="main-content">
        <div class="container-fluid">
            <form class="offer-form">
                <div class="row g-3">
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">Offer name :</label>
                            <input type="text" class="form-control" name="offerName">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Discount :</label>
                            <input type="number" class="form-control" name="discount">
                        </div>

                    </div>
                    <div class="col-md-6">
                        <div class="mb-3">
                            <label class="form-label">Type :</label>
                            <select class="form-select" id="offerType" onchange="updateItemList()">
                                <option value="product">Product</option>
                                <option value="category">Category</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Select Item :</label>
                            <select class="form-select" id="itemSelect">
                                <!-- Items will be dynamically populated here -->
                            </select>
                        </div>
                    </div>
                    <div class="col-6">
                        <div class="mb-3">
                            <label class="form-label">start Date :</label>
                            <input type="date" class="form-control" name="startDate">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Expiry Date :</label>
                            <input type="date" class="form-control" name="expiryDate">
                        </div>
                    </div>
                    </div>
                    <div class="col-12 text-end">
                        <button type="submit" class="btn btn-add">Add</button>
                    </div>
                </div>
            </form>

            <!-- <div class="d-flex justify-content-between align-items-center mb-3 filters">
                <div class="d-flex gap-2 align-items-center">
                    <span>Sort</span>
                    <select class="form-select form-select-sm" style="width: auto;">
                        <option>Discount</option>
                    </select>
                    <span>By</span>
                    <select class="form-select form-select-sm" style="width: auto;">
                        <option>Ascending</option>
                    </select>
                </div>
                <div class="d-flex gap-2 align-items-center">
                    <span>Filter</span>
                    <select class="form-select form-select-sm" style="width: auto;">
                        <option>All</option>
                    </select>
                </div>
            </div> -->

            <!-- <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Offer name</th>
                            <th>Type</th>
                            <th>Discount</th>
                            <th>Description</th>
                            <th>Usage Limit</th>
                            <th>Expiry Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>Anniversary</td>
                            <td>Flat</td>
                            <td>500</td>
                            <td>...........</td>
                            <td>1</td>
                            <td>01/07/2024</td>
                        </tr>
                    </tbody>
                </table>
            </div> -->
        </div>
    </main>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>

<script>    



                function validateOfferName(value) {
                    const offerNameInput = document.querySelector('input[name="offerName"]');
                    const errorDiv = getOrCreateErrorDiv(offerNameInput);
                    
                    if (!value.trim()) {
                        showError(offerNameInput, errorDiv, 'Offer name is required');
                        return false;
                    } else if (value.length < 3) {
                        showError(offerNameInput, errorDiv, 'Offer name must be at least 3 characters');
                        return false;
                    } else {
                        showSuccess(offerNameInput, errorDiv);
                        return true;
                    }
                }

                function validateDiscount(value) {
                    const discountInput = document.querySelector('input[name="discount"]');
                    const errorDiv = getOrCreateErrorDiv(discountInput);
                    
                    if (!value) {
                        showError(discountInput, errorDiv, 'Discount is required');
                        return false;
                    } else if (isNaN(value) || value <= 0) {
                        showError(discountInput, errorDiv, 'Please enter a valid positive number');
                        return false;
                    } else if (value > 100) {
                        showError(discountInput, errorDiv, 'Discount cannot exceed 100%');
                        return false;
                    } else {
                        showSuccess(discountInput, errorDiv);
                        return true;
                    }
                }

                function validateDates(startDate, expiryDate) {
                    const startDateInput = document.querySelector('input[name="startDate"]');
                    const expiryDateInput = document.querySelector('input[name="expiryDate"]');
                    const startErrorDiv = getOrCreateErrorDiv(startDateInput);
                    const expiryErrorDiv = getOrCreateErrorDiv(expiryDateInput);
                    
                    const today = new Date();
                    today.setHours(0, 0, 0, 0);
                    const start = new Date(startDate);
                    const expiry = new Date(expiryDate);
                    
                    let isValid = true;
                    
                    if (!startDate) {
                        showError(startDateInput, startErrorDiv, 'Start date is required');
                        isValid = false;
                    } else if (start < today) {
                        showError(startDateInput, startErrorDiv, 'Start date cannot be in the past');
                        isValid = false;
                    } else {
                        showSuccess(startDateInput, startErrorDiv);
                    }
                    
                    if (!expiryDate) {
                        showError(expiryDateInput, expiryErrorDiv, 'Expiry date is required');
                        isValid = false;
                    } else if (expiry <= start) {
                        showError(expiryDateInput, expiryErrorDiv, 'Expiry date must be after start date');
                        isValid = false;
                    } else {
                        showSuccess(expiryDateInput, expiryErrorDiv);
                    }
                    
                    return isValid;
                }

                // Helper functions for showing errors and success states
                function getOrCreateErrorDiv(input) {
                    let errorDiv = input.nextElementSibling;
                    if (!errorDiv || !errorDiv.classList.contains('error-message')) {
                        errorDiv = document.createElement('div');
                        errorDiv.className = 'error-message text-danger mt-1';
                        input.parentNode.insertBefore(errorDiv, input.nextSibling);
                    }
                    return errorDiv;
                }

                function showError(input, errorDiv, message) {
                    input.classList.add('is-invalid');
                    input.classList.remove('is-valid');
                    errorDiv.textContent = message;
                }

                function showSuccess(input, errorDiv) {
                    input.classList.remove('is-invalid');
                    input.classList.add('is-valid');
                    errorDiv.textContent = '';
                }

                // Add event listeners for real-time validation
                document.querySelector('input[name="offerName"]').addEventListener('input', function() {
                    validateOfferName(this.value);
                });

                document.querySelector('input[name="discount"]').addEventListener('input', function() {
                    validateDiscount(this.value);
                });

                document.querySelector('input[name="startDate"]').addEventListener('change', function() {
                    validateDates(this.value, document.querySelector('input[name="expiryDate"]').value);
                });

                document.querySelector('input[name="expiryDate"]').addEventListener('change', function() {
                    validateDates(document.querySelector('input[name="startDate"]').value, this.value);
                });


        function updateItemList() {
        const offerType = document.getElementById('offerType').value;
        const itemSelect = document.getElementById('itemSelect');
        
        
        itemSelect.innerHTML = '';
        
       
        fetch(`/admin/offers/items?type=${offerType}`)
            .then(response => response.json())
            .then(items => {
                items.forEach(item => {
                    const option = document.createElement('option');
                    option.value = item._id;
                    option.textContent = item.productName || item.name;
                    itemSelect.appendChild(option);
                });
            })  
            .catch(error => {
                console.error('Error:', error);
            });
    }

    document.querySelector('.offer-form').addEventListener('submit', function(e) {
    e.preventDefault();
    
    const offerNameInput = document.querySelector('input[name="offerName"]');
    const discountInput = document.querySelector('input[name="discount"]');
    const typeSelect = document.getElementById('offerType');
    const itemSelect = document.getElementById('itemSelect');
    const startDateInput = document.querySelector('input[name="startDate"]');
    const expiryDateInput = document.querySelector('input[name="expiryDate"]');

    const isOfferNameValid = validateOfferName(offerNameInput.value);
    const isDiscountValid = validateDiscount(discountInput.value);
    const areDatesValid = validateDates(startDateInput.value, expiryDateInput.value);

  
    if (isOfferNameValid && isDiscountValid && areDatesValid) {
        const formData = {
            offerName: offerNameInput.value,
            discount: discountInput.value,
            type: typeSelect.value,
            itemId: itemSelect.value,
            startDate: startDateInput.value,
            expiryDate: expiryDateInput.value
        };

        fetch('/admin/offers/add', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(formData)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                Swal.fire({
                    icon: 'success',
                    title: 'Offer Added!',
                    text: data.message
                });
                this.reset();
                document.querySelectorAll('.is-valid, .is-invalid').forEach(element => {
                    element.classList.remove('is-valid', 'is-invalid');
                });
                document.querySelectorAll('.error-message').forEach(element => {
                    element.textContent = '';
                });
                updateItemList();
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: data.message
                });
            }
        })
        .catch(error => {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Unable to add the offer. Please try again later.'
            });
        });
    }
});


document.addEventListener("DOMContentLoaded",updateItemList)
</script>